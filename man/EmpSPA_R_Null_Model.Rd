% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/EmpSPA.R
\name{EmpSPA_R_Null_Model}
\alias{EmpSPA_R_Null_Model}
\title{Uses residuals from a null generalized linear model to calculate its empirical cumulant generation function (CGF)}
\usage{
EmpSPA_R_Null_Model(
  Cova.mtx = NULL,
  resid = NULL,
  pIDs,
  gIDs,
  range,
  length.out
)
}
\arguments{
\item{Cova.mtx}{a covariate matrix including a column of 1s}

\item{resid}{a vector of residuals from a generalized linear regression model in which X is the covariate matrix}

\item{pIDs}{a character vector of subject IDs. NOTE: its order should be the same as the subjects order in the covariate matrix X.}

\item{gIDs}{a character vector of subject IDs. NOTE: its order should be the same as the subjects order of the Geno.mtx (i.e. the input of the function EmpSPA()).}

\item{range}{a two-element numeric vector (default: c(-100,100)) to specify the domain of the empirical CGF.}

\item{length.out}{a positive integer (default: 9999) for empirical CGF. Larger length.out corresponds to longer calculation time and more accurate estimated empirical CGF.}
}
\description{
Calculate the empirical cumulant generation function (CGF) of the raw residuals from a generalized linear regression model
}
\examples{
# example 1
# Simulation phenotype and genotype
N = 10000
nSNP = 1000
MAF = 0.3
X1 = rnorm(N)
X2 = rbinom(N,1,0.5)
mu = 0.1+0.5*X1+0.5*X2
Y = rnorm(N, mu, 1)
Phen.mtx = data.frame(ID = paste0("IID-",1:N),
                     Cov1 = X1,
                     Cov2 = X2,
                     y = Y)
obj.linear = lm(Y~Cov1+Cov2, data=Phen.mtx)
R = obj.linear$residuals
X = cbind(1, X1, X2)
C = t(X) \%*\% R
Geno.mtx = matrix(rbinom(N*nSNP,2,MAF),N,nSNP)
# NOTE: The row and column names of genotype matrix are required.
rownames(Geno.mtx) = paste0("IID-",1:N)
colnames(Geno.mtx) = paste0("SNP-",1:nSNP)
Geno.mtx[1:10,1]=NA   # please use NA for missing genotype
obj.null = EmpSPA_R_Null_Model(X, R, pIDs=Phen.mtx$ID, gIDs=rownames(Geno.mtx), range=c(-100,100), length.out = 10000)
}
